async function runAnalysis() {
    const pdfFile = document.getElementById('pdfFile').files[0];
    const jobDescription = document.getElementById('jobDescription').value;
    const resultDiv = document.getElementById('result');
    const analiseButton = document.getElementById('analiseButton'); // Pega o bot√£o

    if (!pdfFile || !jobDescription) {
        resultDiv.innerHTML = "<p style='color: red;'>‚ö†Ô∏è Por favor, fa√ßa o upload de um PDF, TXT ou DOCx e insira a descri√ß√£o da vaga.</p>";
        return;
    }

    analiseButton.disabled = true; // Desabilita o bot√£o durante a an√°lise
    analiseButton.textContent = "Analisando..."; // Altera o texto do bot√£o

    const formData = new FormData();
    formData.append('file', pdfFile);
    formData.append('job_description', jobDescription);

    //resultDiv.innerHTML = "Analisando... <i class='fas fa-spinner fa-spin'></i>";

    resultDiv.innerHTML = '<div class="spinner-border text-primary" role="status"><span class="sr-only">Loading...</span></div>';

    try {
        const response = await fetch('/upload', {
            method: 'POST',
            body: formData
        });

        const result = await response.json();
        if (response.ok) {
            resultDiv.innerHTML = `<p style="color: green;">‚úîÔ∏è <b>${result.result}</b>: ${result.reason}</p>`;
            // Calculate the color based on the similarity score
            let similarityColor = (result.similarity_score < 50) ? 'red' : 'green';
            resultDiv.innerHTML += `<p style="color: green;"><b>üìù Percentual de Match Textual</b>: <span style="font-size: 1.4em; color: ${similarityColor};">${result.similarity_score}%</span></p>`;
            resultDiv.innerHTML += `<p style="color: green;">(O qu√£o pr√≥ximo o texto do seu curr√≠culo est√° do texto da vaga. Quanto maior a porcentagem, melhor seu ranking no sistema!)</p>`;
            // Calculate the color based on the contextual score
            let contextualColor = (result.contextual_score < 50) ? 'red' : 'green';
            resultDiv.innerHTML += `<p style="color: green;"><b>üß† Percentual de Match Contextual</b>: <span style="font-size: 1.4em; color: ${contextualColor};">${result.contextual_score}%</span></p>`;
            resultDiv.innerHTML += `<p style="color: green;">(O qu√£o correlacionado com o contexto da vaga est√° o seu curr√≠culo. Quanto maior a porcentagem, mais sentido faz voc√™ se candidatar √† posi√ß√£o!)</p>`;
            if (result.keywords_missing.value !=='') {
                resultDiv.innerHTML += `<p style="color: green;"><b>üî• Adicione esses termos ao seu CV para melhorar seu Score</b>: ${result.keywords_missing}</p>`;
            };

            // Ap√≥s a an√°lise, muda o bot√£o para 'Recarregar' e habilita
            analiseButton.textContent = 'Recarregar';
            analiseButton.disabled = false;
            analiseButton.onclick = function() {
                location.reload(); // Recarrega a p√°gina quando o bot√£o √© clicado
            };
        } else {
            resultDiv.innerHTML = `<p style="color: red;">‚ùå <b>${result.result}</b>: ${result.reason}</p>`;
            if (result.errors) { // Verifica se h√° erros
                resultDiv.innerHTML += "<ul>";
                for (const error of result.errors) {
                    resultDiv.innerHTML += `<li><strong>Termo:</strong> ${error.termo}</li>`;
                    resultDiv.innerHTML += `<li><strong>Corre√ß√µes:</strong> ${error.correcao}</li>`;
                    resultDiv.innerHTML += `<li><strong>Mensagem:</strong> ${error.mensagem}</li>`;
                    resultDiv.innerHTML += "<hr>"; // Adiciona uma linha horizontal para separar os erros
                }
                resultDiv.innerHTML += "</ul>";
            }
            analiseButton.textContent = 'Recarregar'; // Reverte o texto do bot√£o
            analiseButton.disabled = false; // Reativa o bot√£o
            analiseButton.onclick = function() {
                location.reload(); // Recarrega a p√°gina quando o bot√£o √© clicado
            };
        }
    } catch (error) {
        resultDiv.innerHTML = "<p style='color: red;'>‚ùó‚ö†Ô∏è Erro durante a an√°lise. Por favor, tente novamente.</p>";
        analiseButton.textContent = 'Recarregar'; // Reverte o texto do bot√£o
        analiseButton.disabled = false; // Reativa o bot√£o
        analiseButton.onclick = function() {
            location.reload(); // Recarrega a p√°gina quando o bot√£o √© clicado
        };
    }
}
